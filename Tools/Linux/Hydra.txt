Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-03-29T15:12:04-05:00

====== Hydra ======
Created Sunday 29 March 2020

===== Description =====
Authentication brute-forcer

==== Supports the following services: ====
* adam6500
* asterisk
* cisco
* cisco-enable
* cvs
* firebird
* ftp[s]
* http[s]-{head|get|post}
* http[s]-{get|post}-form
* http-proxy
* http-proxy-urlenum
* icq
* imap[s]
* irc
* ldap2[s]
* ldap3[-{cram|digest}md5][s]
* memcached
* mongodb
* mssql
* mysql
* nntp
* oracle-listener
* oracle-sid
* pcanywhere
* pcnfs
* pop3[s]
* postgres
* radmin2
* rdp
* redis
* rexec
* rlogin
* rpcap
* rsh
* rtsp
* s7-300
* sip
* smb
* smtp[s]
* smtp-enum
* snmp
* socks5
* ssh
* sshkey
* svn
* teamspeak
* telnet[s]
* vmauthd
* vnc
* xmpp

===== Installation =====
* Kali: Built-in

===== Usage =====
{{{code: lang="sh" linenumbers="False"
hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]
}}}


===== Options =====
{{{code: lang="texinfo" linenumbers="False"
  -R        restore a previous aborted/crashed session
  -I        ignore an existing restore file (don't wait 10 seconds)
  -S        perform an SSL connect
  -s PORT   if the service is on a different default port, define it here
  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE
  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE
  -x MIN:MAX:CHARSET  password bruteforce generation, type "-x -h" to get help
  -y        disable use of symbols in bruteforce, see above
  -r		 rainy mode for password generation (-x)
  -e nsr    try "n" null password, "s" login as pass and/or "r" reversed login
  -u        loop around users, not passwords (effective! implied with -x)
  -C FILE   colon separated "login:pass" format, instead of -L/-P options
  -M FILE   list of servers to attack, one entry per line, ':' to specify port
  -o FILE   write found login/password pairs to FILE instead of stdout
  -b FORMAT specify the format for the -o FILE: text(default), json, jsonv1
  -f / -F   exit when a login/pass pair is found (-M: -f per host, -F global)
  -t TASKS  run TASKS number of connects in parallel per target (default: 16)
  -T TASKS  run TASKS connects in parallel overall (for -M, default: 64)
  -w / -W TIME  wait time for a response (32) / between connects per thread (0)
  -c TIME   wait time per login attempt over all threads (enforces -t 1)
  -4 / -6   use IPv4 (default) / IPv6 addresses (put always in [] also in -M)
  -v / -V / -d  verbose mode / show login+pass for each attempt / debug mode 
  -O        use old SSL v2 and v3
  -K        do not redo failed attempts (good for -M mass scanning)
  -q        do not print messages about connection errors
  -U        service module usage details
  -m OPT    options specific for a module, see -U output for information
  -h        more command line options (COMPLETE HELP)
  server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)
  service   the service to crack (see below for supported protocols)
  OPT       some service modules support additional input (-U for module help)
}}}


===== Modules =====

==== http-form-post ====
* Brute forces a http from
* Syntax:
{{{code: lang="texinfo" linenumbers="False"
http-form-post "<url>:<form parameters>:<condition string>[:<optional>[:<optional>]"
}}}

* <url> is the url where the form is posted to
* <form_parameters> are the form parameters:
| Find     | Replace                                       |
|:---------|:----------------------------------------------|
| ^USER^   | This marke will be replaced with the username |
| ^PASS^   | This will be replaces with the password       |
| ^USER64^ | Username base64-ed                            |
| ^PASS64^ | Password base64-ed                            |

The <condition string> is the string that should be present in the reponse when authentication failed.

=== Remarks ===
* Parameters should be chained with & operator : user=^USER^&pass=^PASS^
* Check and double check the formatting of the param string. Hydra won't tell you when you mess up. So you'll get false negatives.


===== Examples =====

=== Brute forcing SSH ===
{{{code: lang="sh" linenumbers="False"
hydra -l testuser -P ./passwords.txt ssh://127.0.0.1
}}}


{{{code: lang="texinfo" linenumbers="False"
hydra -P ./wordlist -t 4 -s 2222 localhost -l megan ssh
}}}

* Specify 4 worker
* Hit port 2222

=== Brute forcing FTP ===
{{{code: lang="sh" linenumbers="False"
hydra -l rawaftp -P ./passwords.txt ftp://127.0.0.1
}}}


=== Brute forcing a HTTP form ===
{{{code: lang="sh" linenumbers="False"
hydra -l admin 192.168.177.10 -P /usr/share/wordlists/rockyou.txt http-form-post "/form/frontpage.php:user=^USER^&pass=^PASS^:INVALID LOGIN" -vV -f
}}}





