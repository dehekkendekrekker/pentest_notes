Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-02-12T19:51:11-05:00

====== nmap ======
Created Wednesday 12 February 2020

===== Installation =====

==== Static ====
{{{code: lang="texinfo" linenumbers="False"
wget https://github.com/ernw/static-toolbox/releases/download/nmap-v7.91SVN/nmap-7.91SVN-x86_64-portable.tar.gz
}}}



curl -O https://raw.githubusercontent.com/andrew-d/static-binaries/master/binaries/linux/x86_64/nmap > [[/tmp/nmap]]
wget https://raw.githubusercontent.com/andrew-d/static-binaries/master/binaries/linux/x86_64/nmap -O /tmp/nmap

Vulnerability enumeration script
https://hackersploit.org/t/scanning-for-vulnerabilities-with-nmap-using-nmap-vulners-script/286

Specify ports:
-p1000- scan from 1000 and up
-p-1000 scan from 1-1000
-p- scan all ports
-p44,45 scan ports 44,45



===== Flags =====
{{{code: lang="sh" linenumbers="False"
TARGET SPECIFICATION
-iL	<filename>		Takes targets from <filename>


HOST DISCOVERY
-sL    List scan           Does reverse DNS lookup
-sn    no port scan
-Pn    no ping scan

PORT SCANS
-sT    Connect scan, performs 3 way handshake  SYN -> SYN/ACK -> RST
-sS    SYN scan      SYN -> SYN/ACK
-sU    UDP scan      scans for open UDP ports. Can be used together with SYN scan
-sC	   Script scan   Executes the default set of scripts against the targets

OTHER SCANS
-sV    Banner scan   Grabs banners from open ports to determine the service running. Also does NSE scanning for the specified ports
-O 					 Performs OS SCAN
-A					 Performs additional OS fingerprinting, script scanning and traceroute

PERFORMANCE
-T0					Paranoid performance template
-T1					Sneaky performance template
-T2					Polite performance template
-T3					Normal performance template (default)
-T4					Agressive performance template
-T5					Insane performance template


OUTPUT
-v     				Verbose output (This outputs information on the fly, so you don't have to wait until the scan completes)
-oG <filename> 		Output greppable output to <filename>      Does not output results of NSE scripts!
-oX <filename>		Output xml output to <filename>
--open				Limits output to open ports only
--reason			Display the reason a port is in a particular state



MISC
--osscan-limit       Limit OS scans to hosts with at least one open and one closed port
--top-ports=<num>	 Scans the top <num> ports
--servicedb          Specify services file. This should point to /usr/share/nmap/nmap-services

}}}


==== Host discovery ====

=== (no portscan (-sn)) ===
Sends the following packets to see if a host is alive
| Packet type       | User | Root |
|:------------------|:-----|:-----|
| ICMP PING         | X    | X    |
| TCP SYN:443       | X    | X    |
| TCP SYN:80        | X    |      |
| TCP ACK:80        |      | X    |
| ICMP TS           | X    | X    |
| ARP local network |      | X    |



==== Port scanning ====

=== SYN Scan (-sS) ===
| Probe Response                                   | Assigned State |
|:-------------------------------------------------|:---------------|
| TCP SYN/ACK response                             | open           |
| TCP RST response                                 | closed         |
| No response received (even after retransmission) | filtered       |
| ICMP host unreachable                            | filtered       |
	


==== UDP Scan (-sU) ====
| Probe Response                               | Assigned State |
|:---------------------------------------------|:---------------|
| Any UDP response from target port (unusual)  | open           |
| No response                                  | open\|filtered |
| ICMP port unreachable error (type 3, code 3) | closed         |
| Other ICMP unreachable error                 | filtered       |
	
It appears the best way to scan for UDP ports is to scan a host for all UDP ports. If we're getting "closed" ports, then the ones that don't reply ie (open|filtered) might be open.


https://nmap.org/book/scan-methods-udp-scan.html





=== Telemetry ===
| Scan type | Hosts | Port count | Data load |
|:----------|:------|:-----------|:----------|
| CONNECT   | 1     | 1000       | 78K       |
| CONNECT   | 1     | 65534      | 4MB       |
| CONNECT   | 254   | 65534      | 1024MB    |
	


==== NSE Scripts ====

NSE scripts are used against targets to perform a wide variety of operations.

=== Location ===
{{{code: lang="sh" linenumbers="False"
ls -l /usr/share/nmap/scripts/
}}}


=== Searching for exploits ===
{{{code: lang="sh" linenumbers="False"
cd /usr/share/nmap/scripts
grep Exploit *.nse
}}}



=== Usage ===
{{{code: lang="sh" linenumbers="False"
nmap <target_ip> --script=<scriptname_without_extension>
}}}

Wildcards are also possible!

{{{code: lang="sh" linenumbers="False"
nmap <target_ip> --script=prefix*
}}}

This will excute all scrips that are prefixed with "prefix" against the target

=== Getting help ===
{{{code: lang="sh" linenumbers="False"
nmap --script-help=<scriptname_without_extension>
}}}


==== Examples ====
{{{code: lang="sh" linenumbers="False"
nmap -p80 10.10.10.1-255 -oG <file>
}}}

Performs connect scan on port 80 on 255 hosts on the subnet, and output greppable output to <file>

{{{code: lang="sh" linenumbers="False"
nmap --script=dns-zone-transfer -p53 ns2.megacorpone.com
}}}

Runs dns-zone-transfer NSE script against port 53 on ns2.megacorpone.com

==== Remarks ====
* nmap is weak when running through a proxy. Basically only TCP Connect scans will work (-sT) , as ICMP and UDP are not supported by the proxy. SYN scan did also not work



==== Links ====
[[https://nmap.org/book/man-performance.html|nmap performance]]
[[Technologies:Portlist]]



