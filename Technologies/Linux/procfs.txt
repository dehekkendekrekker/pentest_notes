Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-12-04T12:33:57-05:00

====== procfs ======
Created Saturday 04 December 2021

===== The process file system =====

===== Description =====
procfs is a virtual filesystem. This means that instead of actual files holding data, it provides a an interface to the linux kernel in a filesystem-like  way.
It behaves in much the same way as an actual filesystem in such  that "files" can be read and written. Making directories, or executing program is not possible.


===== Interesting files for pentesting =====

{{{code: lang="texinfo" linenumbers="False"
/proc/<pid>/cmdline
}}}

* This will return the commandline with which as process is started. 
* This can be brute-forced when arbitrary read in order to find a process that has opened a listening socket

{{{code: lang="texinfo" linenumbers="False"
/proc/<pid>/net/tcp
}}}

* Returns information about the sockets the process has opened. 
* Information returned is in hex format
{{./pasted_image001.png}}
* above: python listening on 0.0.0.0.:8000

{{{code: lang="texinfo" linenumbers="False"
/proc/<pid>/fd/*
}}}

* Files in this directory provide the file descriptors assocated with a process. 
* Note that stdin, stdout and sterr point to /dev/pts/0, while fd  3 points to the socket with inode 145280, which corresponds with the inode of the listening socket in the above output
{{./pasted_image002.png}}

{{{code: lang="texinfo" linenumbers="False"
/proc/<pid>/limits
}}}

* Prints all kinds of limits information for the process at hand
{{./pasted_image003.png}}

===== ASLR =====
{{{code: lang="texinfo" linenumbers="False"
/proc/sys/kernel/randomize_va_space
}}}

Select the address space layout randomization (ASLR)   policy for the system (on architectures that support  ASLR).  Three values are supported for this file:
	  0  Turn ASLR off.  This is the default for architectures
				 that don't support ASLR, and when the kernel is booted
				 with the norandmaps parameter.

			  1  Make the addresses of mmap(2) allocations, the stack,
				 and the VDSO page randomized.  Among other things, this
				 means that shared libraries will be loaded at
				 randomized addresses.  The text segment of PIE-linked
				 binaries will also be loaded at a randomized address.
				 This value is the default if the kernel was configured
				 with CONFIG_COMPAT_BRK.

			  2  (Since Linux 2.6.25) Also support heap randomization.
				 This value is the default if the kernel was not
				 configured with CONFIG_COMPAT_BRK.
				
				

===== Can processes with SUID bit dump core? =====
{{{code: lang="texinfo" linenumbers="False"
/proc/sys/fs/suid_dumpable
}}}

0 (default)
					 This provides the traditional (pre-Linux 2.6.13)
					 behavior.  A core dump will not be produced for a
					 process which has changed credentials (by calling
					 seteuid(2), setgid(2), or similar, or by executing
					 a set-user-ID or set-group-ID program) or whose
					 binary does not have read permission enabled.

			  1 ("debug")
					 All processes dump core when possible.  (Reasons
					 why a process might nevertheless not dump core are
					 described in core(5).)  The core dump is owned by
					 the filesystem user ID of the dumping process and
					 no security is applied.  This is intended for
					 system debugging situations only: this mode is
					 insecure because it allows unprivileged users to
					 examine the memory contents of privileged
					 processes.

			  2 ("suidsafe")
					 Any binary which normally would not be dumped (see
					 "0" above) is dumped readable by root only.  This
					 allows the user to remove the core dump file but
					 not to read it.  For security reasons core dumps in
					 this mode will not overwrite one another or other
					 files.  This mode is appropriate when
					 administrators are attempting to debug problems in
					 a normal environment.

					 Additionally, since Linux 3.6,
					 /proc/sys/kernel/core_pattern must either be an
					 absolute pathname or a pipe command, as detailed in
					 core(5).  Warnings will be written to the kernel
					 log if core_pattern does not follow these rules,
					 and no core dump will be produced.

===== SEE =====
[[Enumeration:Linux]]
https://man7.org/linux/man-pages/man5/proc.5.html  # Manpage
